I"4<p>React와 React Native는 비슷하면서도 은근히 다른 부분이 많은 것 같다.</p>

<p>두 프레임워크를 번갈아가며 사용하다보면 문법적인 부분에 대해서 헷갈릴 때가 자주 있다.</p>

<p>앱에서 새로운 기능을 만들다보니 컴포넌트 하나를 스크롤에 영향받지 않으면서 화면에 고정시킬 필요가 있었는데 React에서
자주 사용했던 문법을 썼더니 바로 에러가 났다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">position</span><span class="p">:</span> <span class="dl">'</span><span class="s1">fixed</span><span class="dl">'</span>
</code></pre></div></div>

<p>예를 들면 쇼핑 사이트에서 장바구니나 문의하기 버튼이 화면 측면에 계속해서 따라다니는 기능이다.</p>

<p>순간적으로 이거를 어떻게 해야하나 생각이 나질 않아 당황했는데 사실 곰곰히 생각해보면 간단한 질문이었다.</p>

<p>position이 <code class="language-plaintext highlighter-rouge">relative</code>일 리는 없을거고, <code class="language-plaintext highlighter-rouge">absolute</code>인 상태에서 스크롤을 무시할 수 있는 기능?</p>

<p>아무 생각 없이 화면 위에 absolute 포지션 레이어를 하나 더 씌워버려서 스크롤이 되지 않는 상황까지 갔다가 문득 깨달았다.</p>

<p><b>그냥 ScrollView나 FlatList의 내부가 아니라 같은 레벨(위치)에 삽입해주면 되는 것이었다.</b></p>

<p>스크롤을 해야할 정도로 구성 컴포넌트들이 많다면 화면 높이는 <code class="language-plaintext highlighter-rouge">Dimensions</code>로 계산해서 top으로 내려주어야 한다.</p>

<p>이 과정에서 아이폰의 경우 다이나믹 아일랜드에 대해 기존에 사용하던 유명 라이브러리들이 제대로 작동하지 않는 현상을 만났다.</p>

<p>그래서 현재는 그냥 맘편히 <a href="https://github.com/th3rdwave/react-native-safe-area-context"><code class="language-plaintext highlighter-rouge">react-native-safe-area-context</code></a>를 사용하고 있다.</p>

<p>다만 <code class="language-plaintext highlighter-rouge">SafeAreaView</code> 컴포넌트에 대해서는 다음과 같은 애니메이션 이슈가 존재하므로 주의하자.</p>

<blockquote>
  <p>While React Native exports a SafeAreaView component, this component only supports iOS 10+ with no support for older iOS versions or Android. In addition, it also has some issues, i.e. if a screen containing safe area is animating, it causes jumpy behavior. So we recommend to use the useSafeAreaInsets hook from the react-native-safe-area-context library to handle safe areas in a more reliable way.
출처 (https://reactnavigation.org/docs/handling-safe-area/)</p>
</blockquote>

<p>이는 화면 전환을 할 때에도 가끔씩 발견되는 깜빡임 문제이다. 예민하지 않은 사람은 상관없을 수 있다.</p>

<p>따라서 Safe Area 관련 기능은 전부 <code class="language-plaintext highlighter-rouge">useSafeAreaInsets</code>를 사용하여 해결하기로 하고 다른 라이브러리는 삭제해주었다. 예를 들면 
<code class="language-plaintext highlighter-rouge">react-native-iphone-x-helper</code>와 같은 라이브러리다. 이게 제대로 작동하지 않는다는 것을 깨달을 때까지 시간이 꽤나 걸려서 묘한 배신감이 든다.<br />
그리고 UI를 만들다보면 오히려 SafeAreaView를 사용하는 것이 더 귀찮음을 유발할 때가 많다. 특히 배경색을 지정할 때 그러하다.</p>

<p>아무튼, 높이 관련 라이브러리르 하나로 통일해서 기분이 좋다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useSafeAreaInsets</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-native-safe-area-context</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">Demo</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">insets</span> <span class="o">=</span> <span class="nx">useSafeAreaInsets</span><span class="p">();</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
      <span class="o">&lt;</span><span class="nx">ScrollView</span><span class="o">&gt;</span>
        <span class="p">...</span>
      <span class="o">&lt;</span><span class="sr">/ScrollView</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="nx">View</span> <span class="nx">style</span><span class="o">=&gt;</span>
    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

:ET