I"<p>마스터 노드의 설정이 이미 되어 있고 추가할 워커노드의 OS가 우분투 20.04 버전인 경우를 기준으로 설명하겠다.</p>

<h1 id="필요조건">필요조건</h1>
<p>● docker
● kubelet
● kubeadm
● kubectl</p>

<h1 id="마무리">마무리</h1>
<p>마스터 노드에서 토큰을 발급하여 새로 연결할 워커노드에 입력해준다.</p>

<hr />

<p>이상이다. 이렇게만 보면 몹시 간단하다.</p>

<p>하나하나 차근차근 진행해보자.</p>

<h3 id="docker-설치">docker 설치</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | <span class="nb">sudo </span>gpg <span class="nt">--dearmor</span> <span class="nt">-o</span> /usr/share/keyrings/docker-archive-keyring.gpg
<span class="nb">echo</span> <span class="se">\</span>
  <span class="s2">"deb [arch=</span><span class="si">$(</span>dpkg <span class="nt">--print-architecture</span><span class="si">)</span><span class="s2"> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu </span><span class="se">\</span><span class="s2">
  </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2"> stable"</span> | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/docker.list <span class="o">&gt;</span> /dev/null
<span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-ce docker-ce-cli containerd.io
<span class="nb">sudo </span>docker version
<span class="nb">sudo </span>systemctl <span class="nb">enable </span>docker
<span class="nb">sudo </span>systemctl start docker
</code></pre></div></div>

<h3 id="kubelet-kubeadm-kubectl-설치">kubelet, kubeadm, kubectl 설치</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> apt-transport-https ca-certificates curl
curl <span class="nt">-s</span> https://packages.cloud.google.com/apt/doc/apt-key.gpg | <span class="nb">sudo </span>apt-key add -
<span class="nb">echo</span> <span class="s2">"deb http://apt.kubernetes.io/ kubernetes-xenial main"</span> | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/kubernetes.list
<span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="nt">-y</span> kubelet kubeadm kubectl
<span class="nb">sudo </span>apt-mark hold kubelet kubeadm kubectl
<span class="nb">sudo </span>systemctl daemon-reload
<span class="nb">sudo </span>systemctl restart kubelet
</code></pre></div></div>

<h3 id="토큰-발급-및-등록">토큰 발급 및 등록</h3>
<p>우선, 마스터 노드에서 토큰을 발급한다.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>kubeadm token create <span class="nt">--print-join-command</span>
</code></pre></div></div>
<p>이렇게 하면 <code class="language-plaintext highlighter-rouge">kubeadm join &lt;Kubernetes API Server:PORT&gt; --token &lt;Token 값&gt; --discovery-token-ca-cert-hash sha256:&lt;Hash 값&gt;</code> 이러한 형태의 결과값이 나오는데 그대로 복사해서 새로운 워커노드 터미널에 붙여넣기 해주면 된다.</p>

<p>각각의 값은 다음과 같이 확인할 수 있다.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># kubectl이 바라보는 API 서버 주소</span>
kubectl cluster-info
<span class="c"># token 값 확인</span>
kubeadm token list
<span class="c"># hash 값 확인</span>
openssl x509 <span class="nt">-pubkey</span> <span class="nt">-in</span> /etc/kubernetes/pki/ca.crt | openssl rsa <span class="nt">-pubin</span> <span class="nt">-outform</span> der 2&gt;/dev/null | openssl dgst <span class="nt">-sha256</span> <span class="nt">-hex</span> | <span class="nb">sed</span> <span class="s1">'s/^.* //'</span>
</code></pre></div></div>

<h3 id="-에러">🔒 에러</h3>
<p>위의 과정에서 아마도 다음과 같은 에러가 발생할 것이다.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>error execution phase preflight: <span class="o">[</span>preflight] Some fatal errors occurred:
<span class="o">[</span>ERROR CRI]: container runtime is not running: output: <span class="nb">time</span><span class="o">=</span><span class="s2">"2020-11-25T12:58:32Z"</span> <span class="nv">level</span><span class="o">=</span>fatal <span class="nv">msg</span><span class="o">=</span><span class="s2">"getting status of runtime failed: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService"</span>
, error: <span class="nb">exit </span>status 1
</code></pre></div></div>

<h3 id="-해결">🔑 해결</h3>
<p>아래와 같이 해결하면 된다.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo rm</span> /etc/containerd/config.toml
<span class="nb">sudo </span>systemctl restart containerd
</code></pre></div></div>

<p>항상 느끼지만 대부분의 쿠버네티스 오류는 kubelet, docker, containerd, calico에서 발생하는 것 같다.</p>

<p>마지막으로 마스터노드에 들어가서 <code class="language-plaintext highlighter-rouge">kubectl get node</code>를 해보자. 잘 인식이 된다면 성공이다.</p>

<h1 id="참고">참고</h1>
<p><a href="https://confluence.curvc.com/pages/releaseview.action?pageId=98048155">Ubuntu에서 쿠버네티스(k8s) 설치 가이드</a></p>
:ET